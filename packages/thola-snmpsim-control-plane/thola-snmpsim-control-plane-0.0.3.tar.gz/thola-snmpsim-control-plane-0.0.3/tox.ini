[tox]
minversion = 3.4.0
envlist = unittest, flake8, docs, bandit, build

[testenv]
basepython = python3
usedevelop = True
setenv =
   VIRTUAL_ENV={envdir}
   PYTHONWARNINGS=default::DeprecationWarning
install_command = pip install {opts} {packages}
whitelist_externals =
    /bin/echo
    /usr/bin/make

[testenv:unittest]
deps =
  discover
  -r{toxinidir}/devel-requirements.txt
  -r{toxinidir}/requirements.txt
commands = discover -s tests

[testenv:flake8]
skip_install = true
deps =
    flake8
    flake8-bugbear
    flake8-colors
    flake8-docstrings
    flake8-import-order
    pep8-naming
commands =
    flake8 --config .flake8.ini --count --import-order-style pep8 \
        --application-import-names snmpsim_control_plane snmpsim_control_plane \
        tests setup.py {posargs}

[testenv:pylint]
deps =
    pyflakes
    pylint
    -r{toxinidir}/requirements.txt
commands =
    pylint snmpsim_control_plane

[testenv:cover]
setenv =
    {[testenv]setenv}
    PYTHON=coverage run --parallel-mode
deps =
    {[testenv:unittest]deps}
    coverage
    discover
commands =
    coverage erase
    coverage run --source snmpsim_control_plane -m unittest discover {posargs}
    coverage report --fail-under 0

[testenv:bandit]
skip_install = true
deps =
    bandit
commands =
    bandit -r snmpsim_control_plane -c .bandit.yml

[testenv:docs]
skip_install = true
deps =
  -r{toxinidir}/devel-requirements.txt
commands =
    make -C docs html

[testenv:build]
skip_install = true
deps =
    wheel
    setuptools
commands =
    python setup.py -q sdist bdist_wheel

[testenv:mgmt-restapi]
deps =
    {[testenv:unittest]deps}
commands =
    echo Frendly advice: try "tox -e mgmt-restapi -- --help" for usage hints o/
    {toxinidir}/tests/integration/management.sh {posargs}

[testenv:metrics-restapi]
deps =
    {[testenv:unittest]deps}
commands =
    echo Frendly advice: try "tox -e metrics-restapi -- --help" for usage hints o/
    {toxinidir}/tests/integration/metrics.sh {posargs}
