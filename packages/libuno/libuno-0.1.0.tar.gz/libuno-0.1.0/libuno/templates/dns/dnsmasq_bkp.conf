# global options

# Never forward plain names (without a dot or domain part)
domain-needed

# Never forward addresses in the non-routed address spaces.
bogus-priv

# If you don't want dnsmasq to read /etc/resolv.conf or any other
# file, getting its servers from this file instead (see below), then
# uncomment this.
no-resolv

# Uncomment this to filter useless windows-originated DNS requests
# which can trigger dial-on-demand links needlessly.
# Note that (amongst other things) this blocks all SRV requests,
# so don't use it if you use eg Kerberos, SIP, XMMP or Google-talk.
# This option only affects forwarding, SRV records originating for
# dnsmasq (via srv-host= lines) are not suppressed by it.
filterwin2k

# Set this (and domain: see below) if you want to have a domain
# automatically added to simple names in a hosts-file.
# expand-hosts

# Set the domain for dnsmasq. this is optional, but if it is set, it
# does the following things.
# 1) Allows DHCP hosts to have fully qualified domain names, as long
#     as the domain part matches this setting.
# 2) Sets the "domain" DHCP option thereby potentially setting the
#    domain of all systems configured by DHCP
# 3) Provides the domain part for "expand-hosts"
# domain={{local_domain}}

# Add local-only domains here, queries in these domains are answered
# from /etc/hosts or DHCP only.
# local=/{{local_domain}}/

# If you want dnsmasq to listen for DHCP and DNS requests only on
# specified interfaces (and the loopback) give the name of the
# interface (eg eth0) here.
# Repeat the line for more than one interface.
#interface=

# Or you can specify which interface _not_ to listen on
{% for ex_int in except_interfaces %}except-interface={{ex_int}}
{% endfor %}

# Or which to listen on by address (remember to include 127.0.0.1 if
# you use this.)
listen-address=127.0.0.1

# Configure upstream DNS servers
{% for srv in upstream_servers %}server={{srv}}
{% endfor %}

# Uncomment this to enable the integrated DHCP server, you need
# to supply the range of addresses available for lease and optionally
# a lease time. If you have more than one network, you will need to
# repeat this for each network on which you want to supply DHCP
# service.
# dhcp-range=192.168.10.10,192.168.10.50,12h

# Set the limit on DHCP leases, the default is 150
# dhcp-lease-max=25

# Only listen to routers' LAN NIC.  Doing so opens up tcp/udp port 53 to localhost and udp port 67 to world:
# interface=enp0s0

# # dnsmasq will open tcp/udp port 53 and udp port 67 to world to help with dynamic interfaces (assigning dynamic IPs).
# # dnsmasq will discard world requests to them, but the paranoid might like to close them and let the kernel handle them.
# bind-interfaces

# # Optionally set a domain name
# domain=example.org

# # Set default gateway
# dhcp-option=3,0.0.0.0

# # Set DNS servers to announce
# dhcp-option=6,0.0.0.0

# # If your dnsmasq server is also doing the routing for your network, you can use option 121 to push a static route out.
# # x.x.x.x is the destination LAN, yy is the CIDR notation (usually /24), and z.z.z.z is the host which will do the routing.
# dhcp-option=121,x.x.x.x/yy,z.z.z.z

# # Dynamic range of IPs to make available to LAN PC and the lease time. 
# # Ideally set the lease time to 5m only at first to test everything works okay before you set long-lasting records.
# dhcp-range=192.168.111.50,192.168.111.100,12h

# # Provide IPv6 DHCP leases, the range is constructed using the network interface as prefix
# dhcp-range=::f,::ff,constructor:enp0s0

# # If youâ€™d like to have dnsmasq assign static IPs to some clients, bind the LAN computers NIC MAC addresses:
# dhcp-host=aa:bb:cc:dd:ee:ff,192.168.111.50
# dhcp-host=aa:bb:cc:ff:dd:ee,192.168.111.51

# Include all files in a directory which end in .conf
conf-dir={{conf_dir}},*.conf
