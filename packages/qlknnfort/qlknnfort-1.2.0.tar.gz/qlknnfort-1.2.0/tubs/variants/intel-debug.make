FFLAGS_DEBUG ?= -g -warn all -check all -O0 -check noarg_temp_created -traceback
TUBS_FFLAGS ?= $(FFLAGS_DEBUG) -fPIC
#-fstack-protector-all  -qopenmp -fpe0
TUBS_LDFLAGS ?= -fPIC

# -fpe0 removed. Specifying -fpe0 for the main program enables it for all
# modules (which makes sense, since the traps are runtime signals); but 
# e.g., TGLF relies on the non-trapping behaviour.
#
include $(TCI_MAKE_HERE)/variants/intel_common.make

TOOL_ADDITIONAL_CLEANUP += clean-intel-autofiles
define TOOL_additional_cleanup = 
clean-intel-autofiles : 
	$$(call UTIL_msg_clean,(indeterminate number),autogenerated files,<ifort>)
	$(V_)-rm $$(BAKEDMODDEST)/*__genmod.f90 2>/dev/null; true
	$(V_)-rm $$(BAKEDMODDEST)/*__genmod.mod 2>/dev/null; true
endef

# Special: with -warn all (specifically -warn interfaces), ifort outputs a pile
# of *__genmod.{mod,f90} files. These extra rules are to remove them.
# TODO TODO TODO how to hack in an extra rule that removes random files?
# TODO TODO TODO  pattern = $(BAKEDMODDEST)/*__genmod.*

#EOF vim:syntax=make:foldmethod=marker:ts=4:noexpandtab:
