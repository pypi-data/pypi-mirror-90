{"version":3,"sources":["ProfileReport.tsx","index.tsx"],"names":["iframeResizerAgent","document","createElement","innerHTML","iframeResizerAgentSource","type","async","handleHeight","height","Streamlit","setFrameHeight","withStreamlitConnection","args","useState","html","setHtml","useEffect","fixedHeightProps","maxHeight","scrolling","autoResize","iframe","iframeResizer","checkOrigin","onResized","close","container","querySelector","appendChild","querySelectorAll","forEach","element","target","remove","id","title","width","frameBorder","srcDoc","ReactDOM","render","StrictMode","getElementById"],"mappings":"sQAcMA,EAAqBC,SAASC,cAAc,UAClDF,EAAmBG,UAAYC,IAC/BJ,EAAmBK,KAAO,kBAC1BL,EAAmBM,OAAQ,EAE3B,IAAMC,EAAe,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,OACtBC,IAAUC,eAAeF,IAgDZG,eA7CO,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAA+B,EAC9BC,mBAAS,IADqB,mBAC/CC,EAD+C,KACzCC,EADyC,KAkCtD,OA/BAC,qBAAU,WACR,IAAMC,EAAoC,OAAhBL,EAAKJ,OAAmB,GAAK,CACrDU,UAAWN,EAAKJ,OAChBW,WAAW,EACXC,YAAY,GAGRC,EAASC,IAAc,aAC3BC,aAAa,EACbC,UAAWjB,GACRU,GACF,0BAEH,OAAO,WACLI,EAAOI,WAER,CAACb,EAAKJ,SAETQ,qBAAU,WAAO,IAAD,EACRU,EAAYzB,SAASC,cAAc,QACzCwB,EAAUvB,UAAYS,EAAKE,KAE3B,UAAAY,EAAUC,cAAc,eAAxB,SAAiCC,YAAY5B,GAC7C0B,EAAUG,iBAAiB,KAAKC,SAAQ,SAACC,GACvCA,EAAQC,OAAS,YAGnBjB,EAAQW,EAAUvB,WAClBuB,EAAUO,WACT,CAACrB,EAAKE,OAGP,4BACEoB,GAAG,wBACHC,MAAM,iBACNC,MAAM,OACNC,YAAa,EACbC,OAAQxB,OC3DdyB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFxC,SAASyC,eAAe,W","file":"static/js/main.965e4543.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { ComponentProps, Streamlit, withStreamlitConnection } from \"streamlit-component-lib\";\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport iframeResizerAgentSource from \"!!raw-loader!iframe-resizer/js/iframeResizer.contentWindow\"\nimport iframeResizer from \"iframe-resizer/js/iframeResizer\"\n\ninterface ProfileReportProps extends ComponentProps {\n  args: {\n    html: string\n    height: number\n  }\n}\n\nconst iframeResizerAgent = document.createElement(\"script\")\niframeResizerAgent.innerHTML = iframeResizerAgentSource\niframeResizerAgent.type = \"text/javascript\"\niframeResizerAgent.async = true\n\nconst handleHeight = ({ height }: any) => {\n  Streamlit.setFrameHeight(height)\n}\n \nconst ProfileReport = ({ args }: ProfileReportProps) => {\n  const [html, setHtml] = useState(\"\") \n\n  useEffect(() => {\n    const fixedHeightProps = (args.height === null) ? {} : {\n      maxHeight: args.height,\n      scrolling: true,\n      autoResize: false\n    }\n\n    const iframe = iframeResizer({\n      checkOrigin: false,\n      onResized: handleHeight,\n      ...fixedHeightProps,\n    }, \"#iframe-profile-report\")\n\n    return () => {\n      iframe.close()\n    }\n  }, [args.height])\n\n  useEffect(() => {\n    const container = document.createElement(\"html\")\n    container.innerHTML = args.html\n\n    container.querySelector(\"head\")?.appendChild(iframeResizerAgent)\n    container.querySelectorAll(\"a\").forEach((element: HTMLAnchorElement) => {\n      element.target = \"_blank\"\n    })\n\n    setHtml(container.innerHTML)\n    container.remove()\n  }, [args.html])\n\n  return (\n    <iframe\n      id=\"iframe-profile-report\"\n      title=\"Profile Report\"\n      width=\"100%\"\n      frameBorder={0}\n      srcDoc={html}\n    />\n  )\n}\n\nexport default withStreamlitConnection(ProfileReport)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport ProfileReport from \"./ProfileReport\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ProfileReport />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}