(self.webpackChunk_parente_jupyterlab_quickopen=self.webpackChunk_parente_jupyterlab_quickopen||[]).push([[568],{568:(e,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>g});var n=a(242),s=a(635),i=a(810),o=a(87),c=a(834),r=a(67),l=a(860),d=a(968),p=a(168),m=a(510);class u extends m.CommandPalette{constructor(e,t){super(t),this._pathSelected=new p.Signal(this),this.id="jupyterlab-quickopen",this.title.iconClass="jp-SideBar-tabIcon jp-SearchIcon",this.title.caption="Quick Open",this._fileBrowser=e.defaultBrowser}get pathSelected(){return this._pathSelected}set settings(e){this._settings=e}async onActivateRequest(e){super.onActivateRequest(e);let t=this._settings.relativeSearch?this._fileBrowser.model.path:"",a=await async function(e,t){const a=t.map((e=>"excludes="+encodeURIComponent(e))).join("&"),n=c.ServerConnection.makeSettings(),s=i.URLExt.join(n.baseUrl,"jupyterlab-quickopen","api","files")+"?"+a+"&path="+e,o=await c.ServerConnection.makeRequest(s,{method:"GET"},n);if(200!==o.status)throw new c.ServerConnection.ResponseError(o);return await o.json()}(t,this._settings.excludes);this.clearItems();for(let e in a.contents)for(let t of a.contents[e]){let a=`${e}/${t}`;this.commands.hasCommand(a)||this.commands.addCommand(a,{label:t,execute:()=>{this._pathSelected.emit(a)}}),this.addItem({command:a,category:e})}}}const h={id:"@parente/jupyterlab-quickopen:plugin",autoStart:!0,requires:[s.ICommandPalette,o.IDocumentManager,n.ILabShell,r.ISettingRegistry,l.IFileBrowserFactory],activate:async(e,t,a,n,s,o)=>{console.log(`Activated extension: ${h.id}`);const c=new d.CommandRegistry,r=new u(o,{commands:c}),l=await s.load(h.id);r.pathSelected.connect(((e,t)=>{n.collapseLeft(),a.openOrReveal(i.PathExt.normalize(t))})),r.settings=l.composite,l.changed.connect((e=>{r.settings=e.composite}));const p="quickopen:activate";e.commands.addCommand(p,{label:"Quick Open",execute:()=>{n.activateById(r.id)}}),t.addItem({command:p,category:"File Operations"}),n.add(r,"left",{rank:1e3})}},g=h}}]);