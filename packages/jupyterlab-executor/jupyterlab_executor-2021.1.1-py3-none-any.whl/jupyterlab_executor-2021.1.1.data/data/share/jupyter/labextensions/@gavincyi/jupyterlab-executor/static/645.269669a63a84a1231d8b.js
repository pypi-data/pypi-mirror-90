(self.webpackChunk_gavincyi_jupyterlab_executor=self.webpackChunk_gavincyi_jupyterlab_executor||[]).push([[645],{645:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>x});var o=n(188),a=n(860),c=n(67),l=n(510),r=n(635),u=n(834),i=n(679);class s{}function d(e){const t=document.createElement("div"),n=document.createElement("label");n.textContent="Executor",t.appendChild(n);const o=document.createElement("select");for(const t of e.executors){const e=document.createElement("option");e.text=t.name,e.value=t.command,o.appendChild(e)}t.appendChild(o);const a=document.createElement("label");a.textContent="Arugments",t.appendChild(a);const c=document.createElement("input");return c.type="text",c.value="",t.appendChild(c),t}class m extends l.Widget{constructor(e,t){super({node:d(t)}),this._path="",this._path=e}getValue(){const e=this.node.querySelector("select"),t=this.node.querySelector("input");return`${e.value}${this._path} ${t.value}`}}const p="@gavincyi/jupyterlab-executor:executor",b="jupyterlab-executor:execute",x={id:p,autoStart:!0,requires:[a.IFileBrowserFactory,c.ISettingRegistry],activate:function(e,t,n){console.log("JupyterLab extension jupyterlab-executor is activated!");const{tracker:a}=t,c=new s;Promise.all([n.load(p),e.restored]).then((([e])=>{c.executors=e.get("executors").composite})),e.commands.addCommand(b,{execute:()=>{const t=a.currentWidget;if(!t)return;const n=t.selectedItems().next().path;!function(e,t,n){(0,r.showDialog)({title:"Execute",buttons:[r.Dialog.createButton({label:"Execute"}),r.Dialog.okButton({label:"Copy Command"}),r.Dialog.cancelButton({label:"Cancel"})],body:new m(t,n)}).then((async t=>{if(t.button.accept)if("Execute"===t.button.label){console.log("Execute the command");const n=new u.TerminalManager,o=await n.startNew(),a=new i.Terminal(o,{initialCommand:`${t.value}`});a.title.closable=!0;const c=new r.MainAreaWidget({content:a});c.id="jupyter-executor",c.title.label="Execute",c.title.closable=!0,c.isAttached||e.shell.add(c,"main"),e.shell.activateById(c.id)}else"Copy Command"===t.button.label?r.Clipboard.copyToSystem(t.value):console.log(`${t.button.label}`);else console.log("Canceled")}))}(e,n,c)},isVisible:()=>{return(e=a.currentWidget)&&1===(0,o.toArray)(e.selectedItems()).length;var e},iconClass:"jp-RunIcon",label:"Execute"}),e.contextMenu.addItem({command:b,selector:".jp-DirListing-item"})}}}}]);