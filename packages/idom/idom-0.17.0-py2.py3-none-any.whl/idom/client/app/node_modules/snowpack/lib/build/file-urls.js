"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getUrlForFile = exports.transformUrlForFile = exports.defaultFileExtensionMapping = void 0;
const path_1 = __importDefault(require("path"));
const util_1 = require("../util");
exports.defaultFileExtensionMapping = {
    '.mjs': '.js',
    '.jsx': '.js',
    '.ts': '.js',
    '.tsx': '.js',
    '.vue': '.js',
    '.svelte': '.js',
    '.mdx': '.js',
    '.svx': '.js',
    '.elm': '.js',
    '.yaml': '.json',
    '.toml': '.json',
    '.php': '.html',
    '.md': '.html',
    '.ejs': '.html',
    '.njk': '.html',
    '.scss': '.css',
    '.sass': '.css',
    '.less': '.css',
};
function transformUrlForFile(fileLoc, [dirDisk, toUrl], config) {
    const { baseExt } = util_1.getExt(fileLoc);
    const resolvedDirUrl = toUrl === '/' ? '' : toUrl;
    return util_1.replaceExt(fileLoc.replace(dirDisk, resolvedDirUrl).replace(/[/\\]+/g, '/'), baseExt, config._extensionMap[baseExt] || exports.defaultFileExtensionMapping[baseExt] || baseExt);
}
exports.transformUrlForFile = transformUrlForFile;
function getUrlForFile(fileLoc, config) {
    // PERF: Use `for...in` here instead of the slower `Object.entries()` method
    // that we use everywhere else, since this function can get called 100s of
    // times during a build.
    for (const dirDisk in config.mount) {
        if (!config.mount.hasOwnProperty(dirDisk)) {
            continue;
        }
        if (!fileLoc.startsWith(dirDisk + path_1.default.sep)) {
            continue;
        }
        const toUrl = config.mount[dirDisk];
        return transformUrlForFile(fileLoc, [dirDisk, toUrl], config);
    }
    return null;
}
exports.getUrlForFile = getUrlForFile;
//# sourceMappingURL=file-urls.js.map