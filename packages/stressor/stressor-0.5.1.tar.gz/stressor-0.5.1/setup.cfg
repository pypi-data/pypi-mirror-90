[metadata]
name = stressor
version = attr: stressor.__version__
author = Martin Wendt
author_email = stressor@wwwendt.de
maintainer = Martin Wendt
maintainer_email = stressor@wwwendt.de
url = https://github.com/mar10/stressor/
project_urls = 
	Bug Tracker = https://github.com/mar10/stressor/issues
	Source Code = https://github.com/mar10/stressor
	Documentation = https://stressor.readthedocs.io/
	Download = https://github.com/mar10/stressor/releases/latest
description = Stress-test your web app
long_description = file: README.md
long_description_content_type = text/markdown
keywords = web, server, load, test, stress
license = MIT
license_file = LICENSE.txt
classifiers = 
	Development Status :: 4 - Beta
	Environment :: Console
	Intended Audience :: Developers
	Intended Audience :: Information Technology
	Intended Audience :: System Administrators
	License :: OSI Approved :: MIT License
	Operating System :: OS Independent
	Programming Language :: Python
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.5
	Programming Language :: Python :: 3.6
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8
	Topic :: Internet :: WWW/HTTP
	Topic :: Internet :: WWW/HTTP :: Dynamic Content
	Topic :: Internet :: WWW/HTTP :: HTTP Servers
	Topic :: Software Development :: Libraries :: Python Modules
	Topic :: Software Development :: Quality Assurance
	Topic :: Software Development :: Testing
	Topic :: Software Development :: Testing :: Traffic Generation

[options]
package_dir = 
	= .
packages = find:
zip_safe = False
install_requires = 
	lxml
	python-dateutil
	PyYAML
	requests
	snazzy

[options.packages.find]
where = .
include_package_data = True
exclude = 
	tests

[options.entry_points]
console_scripts = 
	stressor = stressor.stressor_cli:run

[bdist_wheel]

[coverage:run]
omit = 
	tests/*
	stressor/stressor_cli.py
	stressor/cli_common.py
	stressor/monitor/*

[coverage:report]
precision = 1
sort = Name
exclude_lines = 
	pragma: no cover
	if __name__ == .__main__.:

[coverage:html]
directory = build/coverage

[tool:pytest]
junit_family = legacy

[flake8]
enable-extensions = G
exclude = 
	__pycache__,
	.cache,
	.eggs,
	.git,
	.tox,
	.vscode,
	build,
	dist,
	docs
max-line-length = 99
ignore = E203, E501, W503, P101
docstring-convention = all  # google?
inline-quotes = double
multiline-quotes = """
docstring-quotes = """
avoid-escape = True

[egg_info]
tag_build = 
tag_date = 0

