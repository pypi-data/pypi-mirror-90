Metadata-Version: 1.1
Name: v8eval
Version: 0.3.2
Summary: Run JavaScript engine V8 in Python
Home-page: https://github.com/sony/v8eval
Author: Yoshiyuki Mineo
Author-email: Yoshiyuki.Mineo@sony.com
License: MIT
Description: v8eval
        ======
        
        |PyPI version| |Gem Version| |GoDoc|
        
        Multi-language bindings to JavaScript engine V8.
        
        Currently v8eval provides Go, Python and Ruby bindings to the latest V8
        7.1 and supports Linux and Mac OS X. v8eval uses SWIG and can be
        extended easily for other languages.
        
        Pre-installation
        ----------------
        
        Linux
        ^^^^^
        
        See
        `Dockerfile <https://github.com/sony/v8eval/blob/master/Dockerfile>`__.
        
        Mac
        ^^^
        
        See
        `.travis.yml <https://github.com/sony/v8eval/blob/master/.travis.yml>`__.
        
        Installation
        ------------
        
        The installation takes several tens of minutes due to V8 build.
        
        Go
        ^^
        
        v8eval requires Go 1.10 or later.
        
        ::
        
           git clone https://github.com/sony/v8eval.git ${GOPATH}/src/github.com/sony/v8eval
           ${GOPATH}/src/github.com/sony/v8eval/go/build.sh install
        
        In the case of Linux, you need to build your Go program with
        ``build.sh``:
        
        ::
        
           ${GOPATH}/src/github.com/sony/v8eval/go/build.sh go build
        
        Python
        ^^^^^^
        
        ::
        
           pip install v8eval
        
        Ruby
        ^^^^
        
        ::
        
           gem install v8eval
        
        Documentation
        -------------
        
        .. _go-1:
        
        Go
        ^^
        
        See `godoc.org <http://godoc.org/github.com/sony/v8eval/go/v8eval>`__.
        
        .. _python-1:
        
        Python
        ^^^^^^
        
        You can create the Sphinx documentation under python/docs.
        
        ::
        
           python/build.sh docs
        
        .. _ruby-1:
        
        Ruby
        ^^^^
        
        You can create the YARD documentation under ruby/doc.
        
        ::
        
           ruby/build.sh docs
        
        Examples
        --------
        
        .. _go-2:
        
        Go
        ^^
        
        .. code:: go
        
           import "github.com/sony/v8eval/go/v8eval"
        
           func Add(x, y int) int {
               var v8 = v8eval.NewV8()
               v8.Eval("var add = (x, y) => x + y;", nil)
        
               var sum int
               v8.Call("add", []int{x, y}, &sum)
               return sum
           }
        
        .. _python-2:
        
        Python
        ^^^^^^
        
        .. code:: python
        
           import v8eval
        
           def add(x, y):
               v8 = v8eval.V8()
               v8.eval('var add = (x, y) => x + y;')
               return v8.call('add', [x, y])
        
        .. _ruby-2:
        
        Ruby
        ^^^^
        
        .. code:: ruby
        
           require 'v8eval'
        
           def add(x, y)
             v8 = V8Eval::V8.new
             v8.eval('var add = (x, y) => x + y;')
             v8.call('add', [x, y])
           end
        
        License
        -------
        
        The MIT License (MIT)
        
        See `LICENSE <https://github.com/sony/v8eval/blob/master/LICENSE>`__ for
        details.
        
        .. |PyPI version| image:: https://badge.fury.io/py/v8eval.svg
           :target: http://badge.fury.io/py/v8eval
        .. |Gem Version| image:: https://badge.fury.io/rb/v8eval.svg
           :target: https://badge.fury.io/rb/v8eval
        .. |GoDoc| image:: https://godoc.org/github.com/sony/v8eval/go/v8eval?status.svg
           :target: http://godoc.org/github.com/sony/v8eval/go/v8eval
        
Keywords: v8 js javascript binding
Platform: UNKNOWN
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries
