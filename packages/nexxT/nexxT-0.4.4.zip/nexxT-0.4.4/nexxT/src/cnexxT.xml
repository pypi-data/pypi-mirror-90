<!--?xml version="1.0"?-->

<!--
 SPDX-License-Identifier: Apache-2.0
 Copyright (C) 2020 ifm electronic gmbh

 THE PROGRAM IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.
-->

<typesystem package="cnexxT" exception-handling="true">
    <template name="fix_bool&amp;,bool&amp;"> 
        bool a, b;
        %CPPSELF.%FUNCTION_NAME(a, b);
        %PYARG_0 = PyTuple_New(2);
        PyTuple_SET_ITEM(%PYARG_0, 0, %CONVERTTOPYTHON[bool](a));
        PyTuple_SET_ITEM(%PYARG_0, 1, %CONVERTTOPYTHON[bool](b));
    </template>

    <load-typesystem name="typesystem_core.xml" generate="no" />
    <load-typesystem name="typesystem_core_common.xml" generate="no" />

    <primitive-type name="int64_t" />

    <smart-pointer-type name="QSharedPointer" type="shared" getter="data" />

    <namespace-type name="nexxT">
        
        <object-type name="DataSample">
            <modify-function signature="make_shared(nexxT::DataSample*)"> 
                <modify-argument index="1">
                    <define-ownership owner="c++"/>
                </modify-argument>
            </modify-function>            
        </object-type>
        
        <object-type name="InterThreadConnection" allow-thread="true">
        </object-type>
        
        <object-type name="Services">
            <modify-function signature="addService(const QString &amp;,QObject*)">
                <modify-argument index="2">
                    <define-ownership owner="c++"/>
                </modify-argument>
            </modify-function>
        </object-type>
        
        <object-type name="Port" allow-thread="true">
            <modify-function signature="make_shared(nexxT::Port*)"> 
                <modify-argument index="1">
                    <define-ownership owner="c++"/>
                </modify-argument>
            </modify-function>
            <modify-function signature="environment() const"> 
                <modify-argument index="return">
                    <define-ownership owner="c++"/>
                </modify-argument>
            </modify-function>            
        </object-type>
        
        <object-type name="InputPortInterface" allow-thread="true">
        </object-type>
        
        <object-type name="OutputPortInterface" allow-thread="true">
        </object-type>
        
        <object-type name="Filter" allow-thread="true">
            <modify-function signature="make_shared(nexxT::Filter*)"> 
                <modify-argument index="1">
                    <define-ownership owner="c++"/>
                </modify-argument>
            </modify-function>
            <modify-function signature="propertyCollection()">
                <modify-argument index="return">
                    <define-ownership owner="c++" />
                </modify-argument>
            </modify-function>
            <modify-function signature="guiState()">
                <modify-argument index="return">
                    <define-ownership owner="c++" />
                </modify-argument>
            </modify-function>
        </object-type>
        
        <object-type name="FilterState">
        </object-type>
        
        <object-type name="PropertyHandler">
        </object-type>

        <object-type name="PropertyCollection">
        </object-type>
        
        <object-type name="BaseFilterEnvironment">
            <modify-function signature="getDynamicPortsSupported(bool&amp;,bool&amp;)">
                <modify-argument index="return">
                    <replace-type modified-type="PyObject"/>
                </modify-argument>
                <modify-argument index="1">
                    <remove-argument />
                </modify-argument>
                <modify-argument index="2">
                    <remove-argument />
                </modify-argument>
                <inject-code class="target">
                    <insert-template name="fix_bool&amp;,bool&amp;">
                        <replace from="$TYPE" to="bool"/>
                    </insert-template>
                </inject-code>
            </modify-function>
            <modify-function signature="propertyCollection() const">
                <modify-argument index="return">
                    <define-ownership owner="c++" />
                </modify-argument>
            </modify-function>
            <modify-function signature="guiState() const">
                <modify-argument index="return">
                    <define-ownership owner="c++" />
                </modify-argument>
            </modify-function>
        </object-type>
        
        <object-type name="PluginInterface">
            <modify-function signature="singleton()">
                <modify-argument index="return">
                    <define-ownership owner="c++"/>
                </modify-argument>
            </modify-function>
        </object-type>

        <object-type name="Logging" />

    </namespace-type>
</typesystem>
