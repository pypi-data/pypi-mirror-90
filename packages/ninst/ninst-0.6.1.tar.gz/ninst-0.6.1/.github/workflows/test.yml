name: Test
on:
- push
jobs:
  check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.6, 3.9]
    name: Check py${{ matrix.python }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: set PYSHA
      run: echo "PYSHA=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pre-commit
        key: pre-commit|${{ env.PYSHA }}|${{ hashFiles('.pre-commit-config.yaml') }}
    - run: pip install -U .[dev]
    - run: python setup.py sdist bdist_wheel
    - run: twine check dist/*
    - uses: reviewdog/action-setup@v1
    - if: github.event_name != 'schedule'
      run: |
        pre-commit run -a flake8 | reviewdog -f=pep8 -name=flake8 -tee -reporter=github-check -filter-mode nofilter
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - run: pre-commit run -a --show-diff-on-failure
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.6, 3.9]
    name: Test py${{ matrix.python }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - run: pip install -U .[dev]
    - run: pytest --cov=$HOME/.niftypet
    - run: codecov
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  deploy:
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    needs: [check, test]
    name: PyPI Deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: casperdcl/deploy-pypi@v1
      with:
        build: true
        password: ${{ secrets.PYPI_TOKEN }}
        skip_existing: true
    - id: collect_assets
      name: Collect assets
      run: |
        echo "::set-output name=asset_path::$(ls dist/*.whl)"
        echo "::set-output name=asset_name::$(basename dist/*.whl)"
        git log --pretty='format:%d%n- %s%n%b---' $(git tag --sort=v:refname | tail -n2 | head -n1)..HEAD > _CHANGES.md
    - id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ninst ${{ github.ref }} beta
        body_path: _CHANGES.md
        draft: true
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.collect_assets.outputs.asset_path }}
        asset_name: ${{ steps.collect_assets.outputs.asset_name }}
        asset_content_type: application/zip
