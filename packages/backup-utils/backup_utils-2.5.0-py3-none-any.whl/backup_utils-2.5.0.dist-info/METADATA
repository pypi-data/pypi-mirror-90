Metadata-Version: 2.1
Name: backup-utils
Version: 2.5.0
Summary: The goal of the project is to simplify backup creation.
Home-page: https://gitlab.com/Oprax/backup-utils
License: MIT
Author: Romain Muller
Author-email: com@oprax.fr
Requires-Python: >=3.6,<4.0
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: System :: Archiving :: Backup
Requires-Dist: appdirs (>=1.4.4,<2.0.0)
Requires-Dist: docker (>=4.4.0,<5.0.0)
Requires-Dist: requests (>=2.25.1,<3.0.0)
Requires-Dist: vonage (>=2.5.4,<3.0.0)
Project-URL: Documentation, https://backup-utils.readthedocs.io
Project-URL: Repository, https://gitlab.com/Oprax/backup-utils
Description-Content-Type: text/markdown

Backup Utils
============


[![Build Status](https://drone.oprax.fr/api/badges/Oprax/backup-utils/status.svg)](https://drone.oprax.fr/Oprax/backup-utils)
[![codecov](https://codecov.io/gl/Oprax/backup-utils/branch/master/graph/badge.svg?token=V9T1OFP3JO)](https://codecov.io/gl/Oprax/backup-utils)
[![Documentation Status](https://readthedocs.org/projects/backup-utils/badge/?version=latest)](https://backup-utils.readthedocs.io/en/latest/?badge=latest)
[![PyPI - License](https://img.shields.io/pypi/l/backup-utils.svg)](https://gitlab.com/Oprax/backup-utils/blob/master/LICENSE)
[![PyPI](https://img.shields.io/pypi/v/backup-utils.svg)](https://pypi.org/project/backup-utils/)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/backup-utils.svg)](https://pypi.org/project/backup-utils/)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)


The goal of this project is to create a front to a backup program like Borg.
Indeed, Borg is a really great tool for backup,
but I always write a bash script to specify directories I want to save.
I also use Rclone to synchronize my backup to a remote.
And finally, I need to backup my database.

There are three steps to backup :
1. Database export
2. Archiving
3. Synchronize

For each step, you can use multiple drivers for multiple tools.
Also if something goes wrong, all Exceptions are catches to send a notification.

By default, database export use **mysql**, archiving **borg**, and synchronize **rclone**.

Visit [documentation](https://backup-utils.readthedocs.io/) for more details.

