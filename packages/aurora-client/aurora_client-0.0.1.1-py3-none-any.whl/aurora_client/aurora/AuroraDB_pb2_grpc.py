# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import aurora_client.aurora.AuroraDB_pb2 as AuroraDB__pb2


class AuroraDatabaseServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ExecuteUpdate = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/ExecuteUpdate',
        request_serializer=AuroraDB__pb2.DbQuery.SerializeToString,
        response_deserializer=AuroraDB__pb2.DbExecuteResponse.FromString,
        )
    self.ExecuteUpdates = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/ExecuteUpdates',
        request_serializer=AuroraDB__pb2.DbQueries.SerializeToString,
        response_deserializer=AuroraDB__pb2.DbExecuteResponse.FromString,
        )
    self.ExecuteQuery = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/ExecuteQuery',
        request_serializer=AuroraDB__pb2.DbQuery.SerializeToString,
        response_deserializer=AuroraDB__pb2.DbQueryResponse.FromString,
        )
    self.ExecutePaginatedQuery = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/ExecutePaginatedQuery',
        request_serializer=AuroraDB__pb2.DbPaginatedQuery.SerializeToString,
        response_deserializer=AuroraDB__pb2.DbQueryResponse.FromString,
        )
    self.ExecuteQueryRecordCount = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/ExecuteQueryRecordCount',
        request_serializer=AuroraDB__pb2.DbQuery.SerializeToString,
        response_deserializer=AuroraDB__pb2.DbQueryRecordCountResponse.FromString,
        )
    self.BatchInsert = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/BatchInsert',
        request_serializer=AuroraDB__pb2.DbBatchInsertRequest.SerializeToString,
        response_deserializer=AuroraDB__pb2.DbExecuteResponse.FromString,
        )
    self.UpdateApolloEnvironmentData = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/UpdateApolloEnvironmentData',
        request_serializer=AuroraDB__pb2.DbApolloEnvironmentDataRequest.SerializeToString,
        response_deserializer=AuroraDB__pb2.DbExecuteResponse.FromString,
        )
    self.GetApolloEnvironmentData = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/GetApolloEnvironmentData',
        request_serializer=AuroraDB__pb2.DbApolloEnvironmentDataRequest.SerializeToString,
        response_deserializer=AuroraDB__pb2.DbQueryResponse.FromString,
        )
    self.IsTableExist = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/IsTableExist',
        request_serializer=AuroraDB__pb2.DbIsTableExistRequest.SerializeToString,
        response_deserializer=AuroraDB__pb2.RtnBool.FromString,
        )
    self.CreateTable = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/CreateTable',
        request_serializer=AuroraDB__pb2.DbCreateTableRequest.SerializeToString,
        response_deserializer=AuroraDB__pb2.Empty.FromString,
        )
    self.DeleteTable = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/DeleteTable',
        request_serializer=AuroraDB__pb2.DbDeleteTableRequest.SerializeToString,
        response_deserializer=AuroraDB__pb2.Empty.FromString,
        )
    self.CacheSet = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/CacheSet',
        request_serializer=AuroraDB__pb2.CacheSetRequest.SerializeToString,
        response_deserializer=AuroraDB__pb2.RtnBool.FromString,
        )
    self.CacheGet = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/CacheGet',
        request_serializer=AuroraDB__pb2.CacheGetRequest.SerializeToString,
        response_deserializer=AuroraDB__pb2.CacheGetResponse.FromString,
        )
    self.CacheExists = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/CacheExists',
        request_serializer=AuroraDB__pb2.CacheExistsRequest.SerializeToString,
        response_deserializer=AuroraDB__pb2.RtnBool.FromString,
        )
    self.CacheHMSet = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/CacheHMSet',
        request_serializer=AuroraDB__pb2.CacheHMSetRequest.SerializeToString,
        response_deserializer=AuroraDB__pb2.RtnBool.FromString,
        )
    self.CacheHMGet = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/CacheHMGet',
        request_serializer=AuroraDB__pb2.CacheHMGetRequest.SerializeToString,
        response_deserializer=AuroraDB__pb2.CacheHMGetResponse.FromString,
        )
    self.CacheHGetAll = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/CacheHGetAll',
        request_serializer=AuroraDB__pb2.CacheHGetAllRequest.SerializeToString,
        response_deserializer=AuroraDB__pb2.CacheHGetAllResponse.FromString,
        )
    self.CacheHMExists = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/CacheHMExists',
        request_serializer=AuroraDB__pb2.CacheHMExistsRequest.SerializeToString,
        response_deserializer=AuroraDB__pb2.RtnBool.FromString,
        )
    self.CacheHDel = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/CacheHDel',
        request_serializer=AuroraDB__pb2.CacheHDelRequest.SerializeToString,
        response_deserializer=AuroraDB__pb2.RtnBool.FromString,
        )
    self.CacheSAdd = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/CacheSAdd',
        request_serializer=AuroraDB__pb2.CacheSAddRequest.SerializeToString,
        response_deserializer=AuroraDB__pb2.RtnBool.FromString,
        )
    self.CacheSRem = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/CacheSRem',
        request_serializer=AuroraDB__pb2.CacheSRemRequest.SerializeToString,
        response_deserializer=AuroraDB__pb2.RtnBool.FromString,
        )
    self.CacheSIsMember = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/CacheSIsMember',
        request_serializer=AuroraDB__pb2.CacheSIsMemberRequest.SerializeToString,
        response_deserializer=AuroraDB__pb2.RtnBool.FromString,
        )
    self.CacheSMembers = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/CacheSMembers',
        request_serializer=AuroraDB__pb2.CacheSMembersRequest.SerializeToString,
        response_deserializer=AuroraDB__pb2.CacheSMembersResponse.FromString,
        )
    self.CacheDel = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/CacheDel',
        request_serializer=AuroraDB__pb2.CacheDelRequest.SerializeToString,
        response_deserializer=AuroraDB__pb2.RtnBool.FromString,
        )
    self.PublishMessage = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/PublishMessage',
        request_serializer=AuroraDB__pb2.PubMessage.SerializeToString,
        response_deserializer=AuroraDB__pb2.Empty.FromString,
        )
    self.SubscribeMessage = channel.unary_stream(
        '/auroraDB.AuroraDatabaseService/SubscribeMessage',
        request_serializer=AuroraDB__pb2.SubChannel.SerializeToString,
        response_deserializer=AuroraDB__pb2.SubMessage.FromString,
        )
    self.AddRecord = channel.unary_unary(
        '/auroraDB.AuroraDatabaseService/AddRecord',
        request_serializer=AuroraDB__pb2.RecordMessage.SerializeToString,
        response_deserializer=AuroraDB__pb2.RtnBool.FromString,
        )


class AuroraDatabaseServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ExecuteUpdate(self, request, context):
    """//////////////////
    Database

    Query
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ExecuteUpdates(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ExecuteQuery(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ExecutePaginatedQuery(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ExecuteQueryRecordCount(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def BatchInsert(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateApolloEnvironmentData(self, request, context):
    """Insert Query; Only used in APOLLOENVIRONMENTCACHE TABLE
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetApolloEnvironmentData(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def IsTableExist(self, request, context):
    """Table
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateTable(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteTable(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CacheSet(self, request, context):
    """//////////////////
    Cache
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CacheGet(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CacheExists(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CacheHMSet(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CacheHMGet(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CacheHGetAll(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CacheHMExists(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CacheHDel(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CacheSAdd(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CacheSRem(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CacheSIsMember(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CacheSMembers(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CacheDel(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PublishMessage(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubscribeMessage(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddRecord(self, request, context):
    """Record
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AuroraDatabaseServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ExecuteUpdate': grpc.unary_unary_rpc_method_handler(
          servicer.ExecuteUpdate,
          request_deserializer=AuroraDB__pb2.DbQuery.FromString,
          response_serializer=AuroraDB__pb2.DbExecuteResponse.SerializeToString,
      ),
      'ExecuteUpdates': grpc.unary_unary_rpc_method_handler(
          servicer.ExecuteUpdates,
          request_deserializer=AuroraDB__pb2.DbQueries.FromString,
          response_serializer=AuroraDB__pb2.DbExecuteResponse.SerializeToString,
      ),
      'ExecuteQuery': grpc.unary_unary_rpc_method_handler(
          servicer.ExecuteQuery,
          request_deserializer=AuroraDB__pb2.DbQuery.FromString,
          response_serializer=AuroraDB__pb2.DbQueryResponse.SerializeToString,
      ),
      'ExecutePaginatedQuery': grpc.unary_unary_rpc_method_handler(
          servicer.ExecutePaginatedQuery,
          request_deserializer=AuroraDB__pb2.DbPaginatedQuery.FromString,
          response_serializer=AuroraDB__pb2.DbQueryResponse.SerializeToString,
      ),
      'ExecuteQueryRecordCount': grpc.unary_unary_rpc_method_handler(
          servicer.ExecuteQueryRecordCount,
          request_deserializer=AuroraDB__pb2.DbQuery.FromString,
          response_serializer=AuroraDB__pb2.DbQueryRecordCountResponse.SerializeToString,
      ),
      'BatchInsert': grpc.unary_unary_rpc_method_handler(
          servicer.BatchInsert,
          request_deserializer=AuroraDB__pb2.DbBatchInsertRequest.FromString,
          response_serializer=AuroraDB__pb2.DbExecuteResponse.SerializeToString,
      ),
      'UpdateApolloEnvironmentData': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateApolloEnvironmentData,
          request_deserializer=AuroraDB__pb2.DbApolloEnvironmentDataRequest.FromString,
          response_serializer=AuroraDB__pb2.DbExecuteResponse.SerializeToString,
      ),
      'GetApolloEnvironmentData': grpc.unary_unary_rpc_method_handler(
          servicer.GetApolloEnvironmentData,
          request_deserializer=AuroraDB__pb2.DbApolloEnvironmentDataRequest.FromString,
          response_serializer=AuroraDB__pb2.DbQueryResponse.SerializeToString,
      ),
      'IsTableExist': grpc.unary_unary_rpc_method_handler(
          servicer.IsTableExist,
          request_deserializer=AuroraDB__pb2.DbIsTableExistRequest.FromString,
          response_serializer=AuroraDB__pb2.RtnBool.SerializeToString,
      ),
      'CreateTable': grpc.unary_unary_rpc_method_handler(
          servicer.CreateTable,
          request_deserializer=AuroraDB__pb2.DbCreateTableRequest.FromString,
          response_serializer=AuroraDB__pb2.Empty.SerializeToString,
      ),
      'DeleteTable': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteTable,
          request_deserializer=AuroraDB__pb2.DbDeleteTableRequest.FromString,
          response_serializer=AuroraDB__pb2.Empty.SerializeToString,
      ),
      'CacheSet': grpc.unary_unary_rpc_method_handler(
          servicer.CacheSet,
          request_deserializer=AuroraDB__pb2.CacheSetRequest.FromString,
          response_serializer=AuroraDB__pb2.RtnBool.SerializeToString,
      ),
      'CacheGet': grpc.unary_unary_rpc_method_handler(
          servicer.CacheGet,
          request_deserializer=AuroraDB__pb2.CacheGetRequest.FromString,
          response_serializer=AuroraDB__pb2.CacheGetResponse.SerializeToString,
      ),
      'CacheExists': grpc.unary_unary_rpc_method_handler(
          servicer.CacheExists,
          request_deserializer=AuroraDB__pb2.CacheExistsRequest.FromString,
          response_serializer=AuroraDB__pb2.RtnBool.SerializeToString,
      ),
      'CacheHMSet': grpc.unary_unary_rpc_method_handler(
          servicer.CacheHMSet,
          request_deserializer=AuroraDB__pb2.CacheHMSetRequest.FromString,
          response_serializer=AuroraDB__pb2.RtnBool.SerializeToString,
      ),
      'CacheHMGet': grpc.unary_unary_rpc_method_handler(
          servicer.CacheHMGet,
          request_deserializer=AuroraDB__pb2.CacheHMGetRequest.FromString,
          response_serializer=AuroraDB__pb2.CacheHMGetResponse.SerializeToString,
      ),
      'CacheHGetAll': grpc.unary_unary_rpc_method_handler(
          servicer.CacheHGetAll,
          request_deserializer=AuroraDB__pb2.CacheHGetAllRequest.FromString,
          response_serializer=AuroraDB__pb2.CacheHGetAllResponse.SerializeToString,
      ),
      'CacheHMExists': grpc.unary_unary_rpc_method_handler(
          servicer.CacheHMExists,
          request_deserializer=AuroraDB__pb2.CacheHMExistsRequest.FromString,
          response_serializer=AuroraDB__pb2.RtnBool.SerializeToString,
      ),
      'CacheHDel': grpc.unary_unary_rpc_method_handler(
          servicer.CacheHDel,
          request_deserializer=AuroraDB__pb2.CacheHDelRequest.FromString,
          response_serializer=AuroraDB__pb2.RtnBool.SerializeToString,
      ),
      'CacheSAdd': grpc.unary_unary_rpc_method_handler(
          servicer.CacheSAdd,
          request_deserializer=AuroraDB__pb2.CacheSAddRequest.FromString,
          response_serializer=AuroraDB__pb2.RtnBool.SerializeToString,
      ),
      'CacheSRem': grpc.unary_unary_rpc_method_handler(
          servicer.CacheSRem,
          request_deserializer=AuroraDB__pb2.CacheSRemRequest.FromString,
          response_serializer=AuroraDB__pb2.RtnBool.SerializeToString,
      ),
      'CacheSIsMember': grpc.unary_unary_rpc_method_handler(
          servicer.CacheSIsMember,
          request_deserializer=AuroraDB__pb2.CacheSIsMemberRequest.FromString,
          response_serializer=AuroraDB__pb2.RtnBool.SerializeToString,
      ),
      'CacheSMembers': grpc.unary_unary_rpc_method_handler(
          servicer.CacheSMembers,
          request_deserializer=AuroraDB__pb2.CacheSMembersRequest.FromString,
          response_serializer=AuroraDB__pb2.CacheSMembersResponse.SerializeToString,
      ),
      'CacheDel': grpc.unary_unary_rpc_method_handler(
          servicer.CacheDel,
          request_deserializer=AuroraDB__pb2.CacheDelRequest.FromString,
          response_serializer=AuroraDB__pb2.RtnBool.SerializeToString,
      ),
      'PublishMessage': grpc.unary_unary_rpc_method_handler(
          servicer.PublishMessage,
          request_deserializer=AuroraDB__pb2.PubMessage.FromString,
          response_serializer=AuroraDB__pb2.Empty.SerializeToString,
      ),
      'SubscribeMessage': grpc.unary_stream_rpc_method_handler(
          servicer.SubscribeMessage,
          request_deserializer=AuroraDB__pb2.SubChannel.FromString,
          response_serializer=AuroraDB__pb2.SubMessage.SerializeToString,
      ),
      'AddRecord': grpc.unary_unary_rpc_method_handler(
          servicer.AddRecord,
          request_deserializer=AuroraDB__pb2.RecordMessage.FromString,
          response_serializer=AuroraDB__pb2.RtnBool.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'auroraDB.AuroraDatabaseService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
