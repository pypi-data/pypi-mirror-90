from os.path import join, dirname
from re import sub

from requests import get

from revli.lib.plugins.plugin import Plugin, quote_js_str


def fetch_default_tokens():
    """
    fetch the default tokens via a request
    :return: secret, socket_id
    """
    resp = get("https://reveal-multiplex.glitch.me/token").json()
    return resp.get("secret"), resp.get("socketId")


class Multiplex(Plugin):
    def add(self):
        secret = None
        socket_id = None

        own_server = input("\nDo you want to use an own socket server? ")
        if "y" in own_server:
            server = input("Url of the socket server: ")
            if not server.endswith("/"):
                server += "/"
        else:
            server = "https://reveal-multiplex.glitch.me/"
            if "y" in input("Do you want to generate the tokens automatically? "):
                secret, socket_id = fetch_default_tokens()
        if not socket_id:
            socket_id = input("Socket id: ")
            secret = input("Secret: ")

        # the socket server has to host the scripts
        self.add_dependency(f"{server}socket.io/socket.io.js", external=True)
        self.add_dependency(f"{server}master.js", external=True)

        self.add_attr_to_initialize("multiplex", {"secret": quote_js_str(secret), "id": quote_js_str(socket_id),
                                                  "url": quote_js_str(server)})
        # TODO add speaker notes? https://github.com/reveal/multiplex (Master Presentation)
        self.create_client()

    def create_client(self):
        """configure the client presentation"""
        with open(join(dirname(self.file), "client.html"), "w") as g:
            g.write("<!-- WARNING: This file is autogenerated. All content will be overwritten! -->\n")
            soup = self.soup.prettify()
            for line in soup.splitlines():
                if "master.js" in line:
                    line = line.replace("master.js", "client.js")
                if "secret:" in line:
                    line = sub(r"secret:\s*\w+\s*,", "secret: null,", line)
                g.write(f"{line}\n")
        print("client updated")

    def command(self):
        """
        update the client presentation
        """
        print("updating the client...", end="\t")
        self.create_client()

    @staticmethod
    def help():
        print("""The multiplex plugin of reveal.js
Add the plugin via the normal `revli plugin add multiplex` command.
The `index.html` file will be the master presentation.
There will be created a `client.html` file next to the `index.html`, 
do not edit this file, all changes will be overwritten!
If you want to update the client presentation run `revli plugin command multiplex`

Probably you want to rename `client.html` to `index.html` and `index.html` to `master.html`,
so that on default everybody is a client""")
