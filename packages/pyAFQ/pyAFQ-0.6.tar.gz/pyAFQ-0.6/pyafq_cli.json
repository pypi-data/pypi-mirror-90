{
    "author": "Ariel Rokem, Jason Yeatman",
    "name": "pyAFQ",
    "tool-version": "0.1.1",
    "description": "Automated Fiber Quantification ... in Python",
    "command-line": "pyAFQ [CONFIG_FILE]",
    "schema-version": "0.5",
    "container-image": {
        "type": "docker",
        "image": "gkiar/fuzzy:ubuntu14.04-python-dipy-afq"
    },
    "environment-variables": [
    {
        "description": "The MCA backend and parameters to use when running commands within this container",
        "name": "VFC_BACKENDS",
        "value": "libinterflop_mca.so -m ieee"
    }],
    "groups":[
    {
        "id": "bundles_group",
        "name": "Bundles Group",
        "description": "Parameters related to bundles of interest.",
        "members": ["bundles", "bundles_seg_algo", "scalars_model", "scalars", 
                    "target_b_val", "target_b_sensitivity"]
    },
    {
        "id": "tracking_group",
        "name": "Tracking Group",
        "description": "Parameters related to streamline tracking.",
        "members": ["directions", "max_angle", "sphere", "seed_mask", "n_seeds",
                    "random_seeds", "rng_seed", "stop_mask", "stop_threshold", "step_size",
                    "min_length", "max_length", "odf_model", "wm_criterion"]
    },
    {
        "id": "segmentation_group",
        "name": "Segmentation Group",
        "description": "Parameters related to segmentation.",
        "members": ["nb_points", "segmentation_seg_algo", "progressive",
                    "greater_than", "rm_small_clusters", "model_clust_thr",
                    "reduction_thr", "refine", "pruning_thr", "b0_threshold",
                    "prob_threshold", "rng", "segmentation_return_idx",
                    "filter_by_endpoints", "dist_to_aal"]
    },
    {
        "id": "cleaning_group",
        "name": "Cleaning Group",
        "description": "Parameters related to cleaning.",
        "members": ["n_points", "clean_rounds", "distance_threshold",
                    "length_threshold", "min_sl", "stat", "cleaning_return_idx"]
    },
    {
        "id": "template_group",
        "name": "Template Group",
        "description": "Parameters related to registering to a template.",
        "members": ["reg_subject", "reg_template", "mask_template"]
    }
    ],
    "inputs": [
    {
        "id": "config_file",
        "name": "Configuration file",
        "type": "String",
        "value-key": "[CONFIG_FILE]",
        "optional": false
    },
    {
        "id": "dmriprep_path",
        "name": "dmriprep path",
        "type": "String",
        "value-key": "[DMRIPREP_PATH]",
        "optional": false
    },
    {
        "id": "bundles",
        "name": "bundles",
        "type": "String",
        "list": true,
        "min-list-entries": 1,
        "list-separator": "', '",
        "value-key": "[BUNDLES]",
        "value-choices": ["ATR", "CGC", "CST", "HCC", "IFO", "ILF",
                          "SLF", "ARC", "UNC", "FA", "FP", "CST_R",
                          "C_L", "F_L", "UF_R", "MCP", "AF_R", "CCMid",
                          "F_R", "UF_L", "AF_L", "CC_ForcepsMajor",
                          "CC_ForcepsMinor", "CST_L", "IFOF_L", "C_R",
                          "IFOF_R"],
        "default-value": ["ATR", "CGC", "CST", "IFO", "ILF",
                          "SLF", "ARC", "UNC", "FA", "FP"],
        "optional": true
    },
    {
        "id": "bundles_seg_algo",
        "name": "bubndles seg algo",
        "type": "String",
        "value-key": "[BUNDLES_SEG_ALGO]",
        "value-choices": ["AFQ", "Reco"],
        "default-value": "AFQ",
        "optional": true
    },
    {
        "id": "target_b_val",
        "name": "target b val",
        "type": "Number",
        "value-key": "[TARGET_B_VAL]",
        "default-value": "None",
        "optional": true
    },
    {
        "id": "target_b_sensitivity",
        "name": "target b sensitivity",
        "type": "Number",
        "value-key": "[TARGET_B_SENSITIVITY]",
        "default-value": 50.0,
        "optional": true
    },
    {
        "id": "scalars_model",
        "name": "scalars model",
        "type": "String",
        "value-key": "[SCALARS_MODEL]",
        "value-choices": ["DTI", "DKI"],
        "default-value": "DTI",
        "optional": true
    },
    {
        "id": "scalars",
        "name": "scalars",
        "type": "String",
        "list": true,
        "min-list-entries": 1,
        "list-separator": "', '",
        "value-key": "[SCALARS]",
        "value-choices": ["dti_fa", "dti_md"],
        "default-value": ["dti_fa", "dti_md"],
        "optional": true
    },
    {
        "id": "directions",
        "name": "directions",
        "type": "String",
        "value-key": "[DIRECTIONS]",
        "value-choices": ["det", "prob"],
        "default-value": "det",
        "optional": true
    },
    {
        "id": "max_angle",
        "name": "max angle",
        "type": "Number",
        "value-key": "[MAX_ANGLE]",
        "minimum": 0.0,
        "maximum": 180.0,
        "default-value": 30.0,
        "optional": true
    },
    {
        "id": "sphere",
        "name": "sphere",
        "type": "String",
        "value-key": "[SPHERE]",
        "default-value": "",
        "optional": true
    },
    {
        "id": "seed_mask",
        "name": "seed mask",
        "type": "String",
        "value-key": "[SEED_MASK]",
        "default-value": "",
        "optional": true
    },
    {
        "id": "n_seeds",
        "name": "n seeds",
        "type": "Number",
        "integer": true,
        "value-key": "[N_SEEDS]",
        "minimum": 1,
        "default-value": 1,
        "optional": true
    },
    {
        "id": "random_seeds",
        "name": "random seeds",
        "type": "String",
        "value-key": "[RANDOM_SEEDS]",
        "value-choices": ["false", "true"],
        "default-value": "false",
        "optional": true
    },
    {
        "id": "rng_seed",
        "name": "random seed",
        "type": "Number",
        "value-key": "[RNG_SEED]",
        "default-value": "None",
        "optional": true
    },
    {
        "id": "stop_mask",
        "name": "stop mask",
        "type": "String",
        "value-key": "[STOP_MASK]",
        "default-value": "",
        "optional": true
    },
    {
        "id": "stop_threshold",
        "name": "stop threshold",
        "type": "Number",
        "integer": true,
        "value-key": "[STOP_THRESHOLD]",
        "minimum": 0,
        "default-value": 0,
        "optional": true
    },
    {
        "id": "step_size",
        "name": "step size",
        "type": "Number",
        "value-key": "[STEP_SIZE]",
        "minimum": 0.0,
        "default-value": 0.5,
        "optional": true
    },
    {
        "id": "min_length",
        "name": "min length",
        "type": "Number",
        "integer": true,
        "value-key": "[MIN_LENGTH]",
        "minimum": 1,
        "default-value": 10,
        "optional": true
    },
    {
        "id": "max_length",
        "name": "max length",
        "type": "Number",
        "integer": true,
        "value-key": "[MAX_LENGTH]",
        "default-value": 1000,
        "optional": true
    },
    {
        "id": "odf_model",
        "name": "odf model",
        "type": "String",
        "value-key": "[ODF_MODEL]",
        "value-choices": ["DTI", "CSD"],
        "default-value": "DTI",
        "optional": true
    },
    {
        "id": "wm_criterion",
        "name": "wm labels",
        "type": "Number",
        "integer": true,
        "list": true,
        "min-list-entries": 1,
        "list-separator": ", ",
        "value-key": "[WM_CRITERION]",
        "default-value": 0.1,
        "description": "The values specified correspond to all whitematter regions in the FreeSurfer aparc+aseg parcellation or an FA threshold to use.",
        "optional": true
    },
    {
        "id": "nb_points",
        "name": "nb points",
        "type": "String",
        "value-key": "[NB_POINTS]",
        "value-choices": ["false", "true"],
        "default-value": "false",
        "optional": true
    },
    {
        "id": "segmentation_seg_algo",
        "name": "segmentation seg algo",
        "type": "String",
        "value-key": "[SEGMENTATION_SEG_ALGO]",
        "value-choices": ["AFQ", "Reco"],
        "default-value": "AFQ",
        "optional": true
    },
    {
        "id": "progressive",
        "name": "progressive",
        "type": "String",
        "value-key": "[PROGRESSIVE]",
        "value-choices": ["false", "true"],
        "default-value": "true",
        "optional": true
    },
    {
        "id": "greater_than",
        "name": "greater than",
        "type": "Number",
        "integer": true,
        "value-key": "[GREATER_THAN]",
        "default-value": 50,
        "optional": true
    },
    {
        "id": "rm_small_clusters",
        "name": "rm small clusters",
        "type": "Number",
        "integer": true,
        "value-key": "[RM_SMALL_CLUSTERS]",
        "default-value": 50,
        "optional": true
    },
    {
        "id": "model_clust_thr",
        "name": "model clust thr",
        "type": "Number",
        "integer": true,
        "value-key": "[MODEL_CLUST_THR]",
        "default-value": 40,
        "optional": true
    },
    {
        "id": "reduction_thr",
        "name": "reduction thr",
        "type": "Number",
        "integer": true,
        "value-key": "[REDUCTION_THR]",
        "default-value": 40,
        "optional": true
    },
    {
        "id": "refine",
        "name": "refine",
        "type": "String",
        "value-key": "[REFINE]",
        "value-choices": ["false", "true"],
        "default-value": "false",
        "optional": true
    },
    {
        "id": "pruning_thr",
        "name": "pruning thr",
        "type": "Number",
        "integer": true,
        "value-key": "[PRUNING_THR]",
        "default-value": 6,
        "optional": true
    },
    {
        "id": "b0_threshold",
        "name": "b0 threshold",
        "type": "Number",
        "integer": true,
        "value-key": "[B0_THRESHOLD]",
        "default-value": 0,
        "optional": true
    },
    {
        "id": "prob_threshold",
        "name": "prob threshold",
        "type": "Number",
        "integer": true,
        "value-key": "[PROB_THRESHOLD]",
        "default-value": 0,
        "optional": true
    },
    {
        "id": "rng",
        "name": "rng",
        "type": "String",
        "value-key": "[RNG]",
        "default-value": "",
        "optional": true
    },
    {
        "id": "segmentation_return_idx",
        "name": "segmentation return idx",
        "type": "String",
        "value-key": "[SEGMENTATION_RETURN_IDX]",
        "value-choices": ["false", "true"],
        "default-value": "false",
        "optional": true
    },
    {
        "id": "filter_by_endpoints",
        "name": "filter by endpoints",
        "type": "String",
        "value-key": "[FILTER_BY_ENDPOINTS]",
        "value-choices": ["false", "true"],
        "default-value": "true",
        "optional": true
    },
    {
        "id": "dist_to_aal",
        "name": "dist to aal",
        "type": "Number",
        "integer": true,
        "value-key": "[DIST_TO_AAL]",
        "default-value": 4,
        "optional": true
    },
    {
        "id": "n_points",
        "name": "n points",
        "type": "Number",
        "integer": true,
        "value-key": "[N_POINTS]",
        "minimum": 1,
        "default-value": 100,
        "optional": true
    },
    {
        "id": "clean_rounds",
        "name": "clean rounds",
        "type": "Number",
        "integer": true,
        "value-key": "[CLEAN_ROUNDS]",
        "minimum": 1,
        "default-value": 5,
        "optional": true
    },
    {
        "id": "distance_threshold",
        "name": "distance threshold",
        "type": "Number",
        "integer": true,
        "value-key": "[DISTANCE_THRESHOLD]",
        "minimum": 1,
        "default-value": 5,
        "optional": true
    },
    {
        "id": "length_threshold",
        "name": "length threshold",
        "type": "Number",
        "integer": true,
        "value-key": "[LENGTH_THRESHOLD]",
        "minimum": 1,
        "default-value": 4,
        "optional": true
    },
    {
        "id": "min_sl",
        "name": "min sl",
        "type": "Number",
        "integer": true,
        "value-key": "[MIN_SL]",
        "default-value": 20,
        "optional": true
    },
    {
        "id": "stat",
        "name": "stat",
        "type": "String",
        "value-key": "[STAT]",
        "value-choices": ["mean", "median"],
        "default-value": "mean",
        "optional": true
    },
    {
        "id": "cleaning_return_idx",
        "name": "cleaning return idx",
        "type": "String",
        "value-key": "[CLEANING_RETURN_IDX]",
        "value-choices": ["false", "true"],
        "default-value": "false",
        "optional": true
    },
    {
        "id": "reg_subject",
        "name": "reg subject",
        "type": "String",
        "value-key": "[REG_SUBJECT]",
        "default-value": "b0",
        "optional": true
    },
    {
        "id": "reg_template",
        "name": "reg template",
        "type": "String",
        "value-key": "[REG_TEMPLATE]",
        "default-value": "mni_t2",
        "optional": true
    },
    {
        "id": "mask_template",
        "name": "mask template",
        "type": "String",
        "value-key": "[MASK_TEMPLATE]",
        "value-choices": ["false", "true"],
        "default-value": "true",
        "optional": true
    },
    {
        "id": "dask_it",
        "name": "dask it",
        "type": "String",
        "value-key": "[DASK_IT]",
        "value-choices": ["false", "true"],
        "default-value": "false",
        "optional": true
    }
    ],
    "output-files": [
    {
        "id": "config_file_output",
        "name": "Configuration file",
        "value-key": "[CONFIG_FILE]",
        "path-template": "[CONFIG_FILE].toml",
        "path-template-stripped-extensions": [".toml"],
        "optional": false,
        "file-template": [
            "[files]",
            "dmriprep_path = '[DMRIPREP_PATH]'",
            "",
            "[bundles]",
            "bundles = ['[BUNDLES]']",
            "seg_algo = '[BUNDLES_SEG_ALGO]'",
            "target_b_val = [TARGET_B_VAL]",
            "target_b_sensitivity = [TARGET_B_SENSITIVITY]",
            "scalars_model = '[SCALARS_MODEL]'",
            "scalars = ['[SCALARS]']",
            "",
            "[tracking]",
            "directions = '[DIRECTIONS]'",
            "max_angle = [MAX_ANGLE]",
            "sphere = [SPHERE]",
            "seed_mask = [SEED_MASK]",
            "n_seeds = [N_SEEDS]",
            "random_seeds = [RANDOM_SEEDS]",
            "rng_seed = [RNG_SEED]",
            "stop_mask = [STOP_MASK]",
            "stop_threshold = [STOP_THRESHOLD]",
            "step_size = [STEP_SIZE]",
            "min_length = [MIN_LENGTH]",
            "max_length = [MAX_LENGTH]",
            "odf_model = '[ODF_MODEL]'",
            "wm_criterion = [[WM_CRITERION]]",
            "",
            "[segmentation]",
            "nb_points = [NB_POINTS]",
            "seg_algo = '[SEGMENTATION_SEG_ALGO]'",
            "progressive = [PROGRESSIVE]",
            "greater_than = [GREATER_THAN]",
            "rm_small_clusters = [RM_SMALL_CLUSTERS]",
            "model_clust_thr = [MODEL_CLUST_THR]",
            "reduction_thr = [REDUCTION_THR]",
            "refine = [REFINE]",
            "pruning_thr = [PRUNING_THR]",
            "b0_threshold = [B0_THRESHOLD]",
            "prob_threshold = [PROB_THRESHOLD]",
            "rng = [RNG]",
            "return_idx = [SEGMENTATION_RETURN_IDX]",
            "filter_by_endpoints = [FILTER_BY_ENDPOINTS]",
            "dist_to_aal = [DIST_TO_AAL]",
            "",
            "[cleaning]",
            "n_points = [N_POINTS]",
            "clean_rounds = [CLEAN_ROUNDS]",
            "distance_threshold = [DISTANCE_THRESHOLD]",
            "length_threshold = [LENGTH_THRESHOLD]",
            "min_sl = [MIN_SL]",
            "stat = '[STAT]'",
            "return_idx = [CLEANING_RETURN_IDX]",
            "",
            "[template]",
            "reg_subject=[REG_SUBJECT]",
            "reg_template=[REG_TEMPLATE]",
            "mask_template=[MASK_TEMPLATE]",
            "",
            "[compute]",
            "dask_it = [DASK_IT]",
            ""
            ]
        }
    ]
}
