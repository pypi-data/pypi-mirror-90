name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Python-CI:
    name: "Python: ${{ matrix.session }} (${{ matrix.python-version }}, ${{ matrix.os }})"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - { python-version: 3.9, os: ubuntu-latest, session: "lint" }
          - { python-version: 3.9, os: ubuntu-latest, session: "mypy" }
          - { python-version: 3.9, os: ubuntu-latest, session: "xdoctest" }
          - { python-version: 3.9, os: ubuntu-latest, session: "typeguard" }
          - { python-version: 3.7, os: ubuntu-latest, session: "test" }
          - { python-version: 3.8, os: ubuntu-latest, session: "test" }
          - { python-version: 3.9, os: ubuntu-latest, session: "test" }
          - { python-version: 3.9, os: windows-latest, session: "test" }
          - { python-version: 3.9, os: macos-latest, session: "test" }

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache Nox virtualenv
      uses: actions/cache@v2
      id: cache
      with:
        path: .nox
        key: networkg-nox-venv-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.session }}-${{ hashFiles('**/poetry.lock') }}

    - name: Set up Nox
      uses: excitedleigh/setup-nox@1.0.0
      env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: True

    - name: Run Nox
      run: nox --session ${{ matrix.session }}-${{ matrix.python-version }}

  Rust-Lint:
    name: "Rust: lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt clippy
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features -- -D warnings

  Rust-Test:
    name: "Rust: test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          # Disable compilation of the bindings module
          # See https://github.com/gustavgransbo/networkg/commit/041d239f4f8c5d674943a5215c0d885f73492c0e
          args: --features "test"
