
Model:
	commands += Command[";"]
;


// Keep orders
Command:
    SelectCmd|CreateCmd|SetCmd|BedCmd|CopyCmd|CountCmd|DropCmd|ShowCmd|ImportCmd
;


SelectCmd:
    'SELECT' fields+=FieldIdentifier[","] ('FROM' source=ID ('WHERE' filter=FilterExpression)? ('GROUP BY' group_by+=FieldIdentifier[","] ('HAVING' 'count' having_op=MathOperator having_val=NUMBER )?)?)?
;

CreateCmd:
    'CREATE' target=ID 'FROM' source=ID 'WHERE' filter=FilterExpression
;

CopyCmd:
	'CREATE' target=ID 'FROM' source=ID
;

SetCmdFull:
    'CREATE' target=ID '=' expression=SetExpression
;

SetCmd:
	'CREATE' target=ID '=' first=ID op=SetOperator second=ID
;

BedCmd:
	'CREATE' target=ID 'FROM' source=ID 'INTERSECT' path=STRING
;

CountCmd:
	'COUNT' 'FROM' source=ID  ('WHERE' filters=FilterExpression)?
;

DropCmd:
	'DROP' feature=ID name=ID
;

ShowCmd:
	'SHOW' feature=ID
;

ImportCmd:
	'IMPORT' feature=ID path=STRING 'AS' name=ID
;

//################################## Set Operation ###################

SetExpression:
 op=SetOperand (op=SetOperator op=SetOperand)*
;


SetOperand:
op= ID | ('(' op=SetExpression ')')
;



//################################## Filter Expression ################

FilterExpression:
 op=FilterOperand (op=BoolOperator op=FilterOperand)*
;


FilterOperand:
op= FilterTerm | ('(' op=FilterExpression ')')
;

FilterTerm:
    field=FieldIdentifier op=MathOperator val=ValueIdentifier
;


//################################## TERMINALS #########################
Comment: /\#.*$/;

FieldId:/[^\d\W](\w*\.)?\w*\b/;
FieldIdentifier: Function|FieldId;
ValueIdentifier: (NUMBER|STRING|BOOL|Tuple|WordSetIdentifier|"NULL");
ARGS: STRING;
Function: func=ID '[' arg=ARGS ']' ('.' extra=ID)?;
WordSetIdentifier: 'WORDSET[' arg=ARGS ']';

BoolOperator: "AND"|"OR";
SetOperator: "|"|"-"|"&";
// WARNING : ORDER IS IMPORTANT ! IS NOT BEFORE IS ..
MathOperator: />=|<=|!=|=|>|<|!~|~|is not|is|like|not like|has|not in|in/;
Tuple: '(' items+=ValueIdentifier[','] ')';


