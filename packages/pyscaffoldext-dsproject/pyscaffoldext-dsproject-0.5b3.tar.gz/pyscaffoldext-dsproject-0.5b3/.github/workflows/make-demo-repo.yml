# This workflows will create a new demo repository using PyScaffold for demonstration purposes

name: Make Demo Repo

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_dispatch:

jobs:
  make-demo:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # avoids shallow checkout as needed by setuptools-scm
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: Set up Conda environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        activate-environment: "pyscaffold"
        environment-file: environment.yml
        auto-update-conda: true
        auto-activate-base: false
    - name: Build and create demo
      run: |
        pip install -e . # otherwise templates are not packaged
        git config --global user.email "john.doe@example.com"
        git config --global user.name "John Doe"
        putup demo-dsproject --dsproject -d "Demonstration of a project generated with the Data Science project extension of PyScaffold" -u https://github.com/pyscaffold/pyscaffoldext-dsproject -l MIT
    - name: Push to dsproject-demo
      if: ${{ steps.extract_branch.outputs.branch }} == 'master'  # run only for tags on master branch
      uses: cpina/github-action-push-to-another-repository@master
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source-directory: "demo-dsproject"
        destination-github-username: "FlorianWilhelm"
        destination-repository-username: "pyscaffold"
        destination-repository-name: "dsproject-demo"
        user-email: florian.wilhelm@gmail.com
        commit-message: "Initial commit"
