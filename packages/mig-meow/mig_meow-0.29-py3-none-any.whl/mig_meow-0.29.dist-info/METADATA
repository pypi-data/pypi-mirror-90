Metadata-Version: 2.1
Name: mig-meow
Version: 0.29
Summary: MiG based manager for event oriented workflows
Home-page: https://github.com/PatchOfScotland/mig_meow
Author: David Marchant
Author-email: d.marchant@ed-alumni.net
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: GNU General Public License (GPL)
Classifier: Operating System :: OS Independent
Requires-Dist: graphviz (==0.13.2)
Requires-Dist: bqplot (==0.12.13)
Requires-Dist: IPython (==7.16.1)
Requires-Dist: requests (==2.24.0)
Requires-Dist: ipywidgets (==7.5.1)
Requires-Dist: PyYAML (==5.3.1)
Requires-Dist: nbformat (==5.0.7)
Requires-Dist: watchdog
Requires-Dist: notebook-parameterizer
Requires-Dist: papermill
Requires-Dist: ipydatetime
Provides-Extra: test
Requires-Dist: numpy ; extra == 'test'

# mig_meow
MEOW is a Manager for Event Oriented Workflows.

## Introduction
mig_meow provides a way for MEOW Workflows to be defined using Patterns and 
Recipes. These can be sent to the MiG 
(https://sourceforge.net/projects/migrid/), which is used for actual job 
processing and data storage.

Currently this package does very little on its own.

## Installation
mig_meow can be installed from pypi using pip using:
```
pip install mig_meow
```

## Jupyter
mig_meow is designed primarily to be used within Jupyter notebooks, either as a
standard notebook or within Jupyter Lab. If you are running it within Jupyter 
Lab it will require the labextensions:

- jupyterlab-manager (https://github.com/jupyter-widgets/ipywidgets)
- bqplot (https://github.com/bqplot/bqplot)

## Examples
Some example patterns and recipes are included in the 'examples' directory. 
These can be worked through in the 'workflow_examples.ipynb' notebook.

## Testing
Automatic testing is available though it will require a numpy install to work 
correctly.

