Metadata-Version: 2.1
Name: fastapi-modules
Version: 2.2.9
Summary: Pacchetto per i modelli di fastapi sqlalchemy
Home-page: https://github.com/giaca95/Fastapi-modules
Author: Giacomo Callegaro
Author-email: giacomo_callegaro.95@libero.it
License: UNKNOWN
Download-URL: https://github.com/giaca95/Fastapi-modules.git
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: SQLAlchemy (>=1.3.22)
Requires-Dist: Pydantic (>=1.7.3)

# FastAPIALI-Models

Modelli SQLAlchemy e Pydantic per l'utilizzo in applicazioni Flask e Fastapi

# Installazione dell paccetto con pip da github
```
pip install -e git+ssh://git@github.com/giaca95/Fastapi-modules.git#egg=fastapi-modules
```

# Per caricare su pypi
```
python setup.py sdist

twine upload dist/*
```

# Classi SQLAlchemy presenti

**Buoni COVID-19 territorio**
```
AziendeEsterne:
    piva: str
    rag_soc: str

BuoniTagli:
    id: int
    cifra: str
    numero: int

AcquisizioneBuoniTestata:
    id: int
    piva: str
    dt_creazione: datetime

    dettagli = relationship("AcquisizioneBuoniDettagli")
    azienda = relationship(AziendeEsterne)

AcquisizioneBuoniDettagli:
    id: int
    id_taglio_buono: int
    qta_buono: int
    dt_inserimento: datetime
    id_testata_acquisizione: int

    buono = relationship("BuoniTagli")
```

**ODS**
```
DimNegozio:
    cod_negozio: str
    des_negozio: str
```

**Richieste volantini**
```
Offerte:
    id: int
    descrizione: str

Linee:
    id: int
    descrizione: str

OfferteAnni:
    id_offerta: int
    anno: str

OfferteLinee:
    id_offerta: int
    id_linea: int

LineeNegozi:
    id_linea: int
    cod_negozio: str

Richieste:
    id: int
    anno: str
    id_offerta: int
    id_linea: int
    cod_negozio: str
    dt_inizio: datetime
    dt_fine: datetime
    invio_ora: bool
    dt_creazione: datetime
    utente: str
    stato: int

    emails = relationship("RichiesteEmail")
    punto_vendita = relationship(DimNegozio)
    offerta = relationship(Offerte)
    linea = relationship(Linee)

RichiesteEmail:
    id_richiesta: int
    email: str
```



