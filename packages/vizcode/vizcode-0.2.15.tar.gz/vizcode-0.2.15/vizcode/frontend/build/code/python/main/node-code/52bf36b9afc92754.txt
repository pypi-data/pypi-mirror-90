def get_fund():    article_url = request.form.get('article_link')    if redis.exists(article_url):        # Get from the redis cache        fund_match = pickle.loads(redis.get(article_url))        return jsonify(fund=fund_match)    else:        print('checking article')        # Check the article        article = Article.query.filter_by(article_link=article_url).first()        # article exists        if article and article.fund_name is not None:            print('article exists')            widget_status = article.widget_status            print(widget_status)            if widget_status:                fund = Fund.query.filter_by(fund_name=article.fund_name).first()                # Save to redis cache                redis.set(article_url, pickle.dumps(fund.serialize()))                return jsonify(fund=fund.serialize())        else:            article_title = request.form.get('article_title')            article_text = request.form.get('article_text')            if 'emorywheel' in article_url:                publisher_id = 'The Emory Wheel'            else:                publisher_id = 'Indiana Daily Student'            if article_title is None or article_title == '':                if publisher_id == 'The Emory Wheel':                    article_info = emory_scraper(article_url)                else:                    article_info = indiana_scraper(article_url)                article_title = article_info['title']                article_text = article_info['content']                article_text = article_text[:len(article_text) // 2]            else:                article_title = article_title.lower()                article_text = article_text.lower()[:len(article_text) // 2]                # store article data in a json file and upload to a s3 bucket                # save_article_data(s3_client=s3, article_link=article_url, article_title=article_title,                #                   article_date_time=datetime.now(), article_text=article_text)            fund = get_best_fund(article_title, article_text)            # fund name is null            if article:                article.fund_name = fund.fund_name            else:                # Add to database                article = Article(                    article_link=article_url,                    article_title=article_title,                    publisher_id=publisher_id,                    widget_status=True,                    date_published=datetime.now(),                    fund_name=fund.fund_name,                    project_id1=None,                    project_id2=None,                    project_id3=None,                    project_id4=None,                    project_id5=None,                    project_id6=None,                    edited_by_publisher=False,                    edited_by_newspark=False,                )                db.session.add(article)            db.session.commit()            redis.set(article_url, pickle.dumps(fund.serialize()))            return jsonify(fund=fund.serialize())