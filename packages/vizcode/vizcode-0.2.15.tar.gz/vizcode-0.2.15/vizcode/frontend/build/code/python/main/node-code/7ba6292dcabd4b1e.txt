def get_projects():    """    Returns all projects associated with an organization from a JWT    :params: JWT token    :return: json object: organization name, projects (without ones that have been deleted, all_projects    """    organization_email = get_jwt_identity()    # check if already in database    exists = db.session.query(db.exists().where(Organization.email == organization_email)).scalar()    if exists:        organization_name = Organization.query.filter_by(email=organization_email)[0].organization_name        projects = [p.serialize() for p in Project.query.filter_by(organization_id=organization_email)]        projects_filtered = [p for p in projects if not p['removed']]        project_names = set()        unique_projects = []        for project in projects_filtered:            # print(project['removed'])            project_name = project['project_name']            if project_name not in project_names:                project_names.add(project_name)                unique_projects.append(project)        unique_projects.reverse()        return jsonify(organization_name=organization_name, projects=unique_projects, all_projects=projects)    else:        return jsonify("Organization Does Not Exist")