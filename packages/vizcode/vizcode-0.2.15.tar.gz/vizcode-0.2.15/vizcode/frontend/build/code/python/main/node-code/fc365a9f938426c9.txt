def get_best_fund(article_title, article_text):    """ Runs Ahoâ€“Corasick algorithm to search tags in an article's text. """    file_name = 'data/tags.pickle'    with open(file_name, 'rb') as input_file:        auto = cPickle.load(input_file)    counts = {}    # first can article title    for end_ind, found in auto.iter(article_title):        fund_name = found[0]        if fund_name not in counts:            counts[fund_name] = 0        counts[fund_name] += 1    if len(counts.keys()) != 0:        best_fund = max(counts.items(), key=lambda x: x[1])[0]        return Fund.query.filter_by(fund_name=best_fund).first()    # if no matches, scan article text    for end_ind, found in auto.iter(article_text):        fund_name = found[0]        if fund_name not in counts:            counts[fund_name] = 0        counts[fund_name] += 1    if len(counts.keys()) == 0:        return Fund.query.filter_by(fund_name='Local Community Fund').first()    best_fund = max(counts.items(), key=lambda x: x[1])[0]    return Fund.query.filter_by(fund_name=best_fund).first()