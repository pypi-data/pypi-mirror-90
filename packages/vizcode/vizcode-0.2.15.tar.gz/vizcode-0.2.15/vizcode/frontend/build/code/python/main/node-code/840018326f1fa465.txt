def update_recommendations(s3_client, article_link, ids, other_ids):    bucket = 'newspark-matching-data'    # bad_chars = ['.', ',', '/']    # new_article_link = str(filter(lambda i: i not in bad_chars, article_link))    file_name = 'labeled-data/{}.json'.format(article_link)    # calling_file_name = inspect.stack()[-1].filename.split("/")[-1]    # file_path = f'downloads/{file_name}'    # if 'test' in calling_file_name:    #     file_path = f'../downloads/{file_name}'    #    # s3_client.download_file(Bucket=bucket, Key=file_name, Filename=file_path)    # # file is empty    # if os.stat(file_path).st_size == 0:    #     data = {"articles": [{"article_link": article_link, "recommended_projects": ids,    #                           "other_projects": other_ids}]}    #     with open(file_path, 'w') as json_file:    #         json.dump(data, json_file, indent=4)    #    # else:    #     found = False    #     with open(file_path, 'r') as json_file:    #         data = json.load(json_file)    #         articles = data['articles']    #         # print(len(articles))    #         for i, article in enumerate(articles):    #             # found matching article link    #             if article['article_link'] == article_link:    #                 articles[i]['recommended_projects'] = ids    #                 articles[i]['other_projects'] = other_ids    #                 found = True    #                 # print("found")    #                 break    #    #         if not found:    #             # print("not found")    #             articles.append({"article_link": article_link, "recommended_projects": ids,    #                              "other_projects": other_ids})    #    #     with open(file_path, 'w') as json_file:    #         json.dump({'articles': articles}, json_file, indent=4)    #    # s3_client.upload_file(Filename=file_path, Bucket=bucket, Key=file_name)    # os.remove(file_path)    data = {"articles": [{"article_link": article_link, "recommended_projects": ids,                          "other_projects": other_ids}]}    s3_client.put_object(Bucket=bucket, Key=file_name, Body=json.dumps(data))    return None