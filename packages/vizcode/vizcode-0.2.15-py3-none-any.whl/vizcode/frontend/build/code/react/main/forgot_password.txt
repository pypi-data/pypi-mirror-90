import React from 'react';
import Button from '@material-ui/core/Button';
import TextField from '@material-ui/core/TextField';
import Dialog from '@material-ui/core/Dialog';
import DialogActions from '@material-ui/core/DialogActions';
import DialogContent from '@material-ui/core/DialogContent';
import DialogContentText from '@material-ui/core/DialogContentText';
import DialogTitle from '@material-ui/core/DialogTitle';
import $ from 'jquery';
import { withStyles, makeStyles } from '@material-ui/core/styles';


const useStyles = theme => ({
  colored: {
    color: '#448AFF',
  },
  label_style: {
    '&.Mui-focused': {
      color: '#448AFF',
    },
  },
  input_style: {
    '&.MuiInput-underline:after': {
      borderBottomColor: '#448AFF',
    },
  },
  helper_style: {
    color: '#FF0000',
  }
});


class ForgotPassword extends React.Component{
  //Constructor for the login Page
  constructor(props){
    super(props);
    this.updateInfo = this.updateInfo.bind(this);
    this.sendPassword = this.sendPassword.bind(this);

    this.state = {
      email: "",
      showErrorMessageReset: false,
      errorText: ""
    };
  }

  updateInfo(event){
    this.setState({[event.target.name]: event.target.value});
  }

  sendPassword(){

    let email_temp = this.state.email;

    if (email_temp.length == 0){
      this.setState({errorText: "Field required"});
    } else {

      var data = {
        "email": email_temp,
      }

      $.ajax({
          url: window.address.concat('owner_forgot_password'),
          type: 'post',
          data: data,
          dataType: 'json',
          success: function (output) {
              if (output === "Success"){
                window.location.reload(false);
              } else {
                this.setState({errorText: "No account found"});
              }
          }.bind(this),
          error: function() {
              this.setState({showErrorMessageReset: true});
          }.bind(this)
      });
    }
  }

  render(){
    const{classes}=this.props;

    return(
      <div>
        <Dialog open={this.props.open} onClose={this.changeHandler} aria-labelledby="form-dialog-title">
          <DialogTitle id="form-dialog-title">Forgot Password</DialogTitle>
          <DialogContent>
            <DialogContentText>
              Please enter your account email. We will send you an email with a temporary password.
            </DialogContentText>
            <TextField
              InputLabelProps = {{className: classes.label_style}}
              InputProps = {{className: classes.input_style}}
              FormHelperTextProps={{ className: classes.helper_style }}
              autoFocus
              margin="dense"
              id="name"
              label="Email Address"
              name="email"
              type="email"
              fullWidth
              onChange={this.updateInfo}
              helperText= {this.state.errorText}
            />
          </DialogContent>
          <DialogActions className={classes.colored}>
            <Button onClick={this.props.changeHandler} className={classes.colored}>
              Cancel
            </Button>
            <Button onClick={this.sendPassword} className={classes.colored}>
              Send
            </Button>
          </DialogActions>
        </Dialog>
      </div>
    );
  }
}

export default withStyles(useStyles)(ForgotPassword);