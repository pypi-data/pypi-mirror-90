class Publisher(db.Model):    __tablename__ = 'publishers'    publisher_name = db.Column(db.String(), primary_key=True)    school = db.Column(db.String(), nullable=True)    publisher_phone_number = db.Column(db.String(), nullable=True)    publisher_website = db.Column(db.String(), nullable=False)    publisher_street_address = db.Column(db.String(), nullable=False)    publisher_city = db.Column(db.String(), nullable=False)    publisher_state = db.Column(db.String(), nullable=False)    publisher_country = db.Column(db.String(), nullable=False)    commissions_raised = db.Column(db.Float(), nullable=False)    commissions_available = db.Column(db.Float(), nullable=False)    def __init__(self, publisher_name, school, publisher_phone_number, publisher_website, \                 publisher_street_address, publisher_city, publisher_state, publisher_country,                 commissions_raised, commissions_available):        self.publisher_name = publisher_name        self.school = school        self.publisher_phone_number = publisher_phone_number        self.publisher_website = publisher_website        self.publisher_street_address = publisher_street_address        self.publisher_city = publisher_city        self.publisher_state = publisher_state        self.publisher_country = publisher_country        self.commissions_raised = commissions_raised        self.commissions_available = commissions_available    def __repr__(self):        return '{} @ {} ({}, {})'.format(self.publisher_name, self.school, self.publisher_city, \                                         self.publisher_state)    def serialize(self):        return {            'publisher_name': self.publisher_name,            'school': self.school,            'publisher_phone_number': self.publisher_phone_number,            'publisher_website': self.publisher_website,            'publisher_street_address': self.publisher_street_address,            'publisher_city': self.publisher_city,            'publisher_state': self.publisher_state,            'publisher_country': self.publisher_country        }