def get_donations_from_publisher_csv():    """    Returns the url to a CSV with the donation logs    :param: JWT token for a owner    :return: JSON object of url    """    username = get_jwt_identity()    exists = Owner.query.filter_by(username=username).first()    if exists:        sql_query = '''select donation_date_time, newspaper_article_title, newspaper_article_link, amount_donated,                                project_name, organization_name, donations.newspaper_id                                from donations, projects, organizations                                where donations.project_id=projects.project_id                                and donations.organization_id=organizations.email                                and donations.newspaper_id in                                     (select publisher_id from Owning where owner_id='{}');'''.format(username)        conn = db.engine.connect().connection        donation_df = pd.read_sql(sql_query, conn)        csv_buffer = StringIO()        donation_df.to_csv(csv_buffer)        filename = username + '_payment_logs.csv'        s3.put_object(Bucket='newspark-charity-data', Key=filename, Body=csv_buffer.getvalue())        return jsonify({"url": s3.generate_presigned_url('get_object',                                                         Params={'Bucket': 'newspark-charity-data', 'Key': filename},                                                         ExpiresIn=300)})    return jsonify({})