def get_payment_logs():    """    Returns the payments logs associated with one organization    :param: JWT token for an organization    :return: JSON object of payment_logs, total_donated_this_week, intiative_totals, total_donated, total_goal    """    current_org = get_jwt_identity()    query1 = Donation.query.filter_by(organization_id=current_org).all()    today = datetime.now()    last_week = today - timedelta(days=7)    serialize_query1 = []    total_donated_this_week = 0    for p in query1:        log = p.serialize()        project_id = log['project_id']        log['project_name'] = Project.query.filter_by(project_id=project_id).first().project_name        serialize_query1.append(log)        donation_date_time = log['donation_date_time']        if (donation_date_time >= last_week) and (donation_date_time <= today):            total_donated_this_week += log['amount_donated']    serialize_query1 = sorted(serialize_query1, key=lambda x: x['donation_date_time'], reverse=True)    for i in range(len(serialize_query1)):        d = serialize_query1[i]        d['donation_date_time'] = d['donation_date_time'].strftime('%m/%d/%Y')    donation_df = pd.DataFrame(serialize_query1)    query2 = Project.query.filter_by(organization_id=current_org).all()    output_dic = {"payment_logs": serialize_query1, "total_donated_this_week": total_donated_this_week, \                  "initiative_totals": [], "total_donated": 0, "total_goal": 0}    initiative_totals = []    for project in query2:        project_id = project.project_id        dic = {}        if donation_df.shape[0] != 0:            donations_for_project = donation_df[donation_df.project_id == project_id]            if donations_for_project.shape[0] != 0:                initiative_total = donations_for_project['amount_donated'].sum()            else:                initiative_total = 0        else:            initiative_total = 0        dic['total_donated'] = int(initiative_total)        dic['goal'] = int(project.project_goal)        dic['name'] = str(project.project_name)        initiative_totals.append(dic)        output_dic['total_donated'] += dic['total_donated']        output_dic['total_goal'] += dic['goal']    initiative_totals = sorted(initiative_totals, key=lambda d: d['total_donated'], reverse=True)    initiative_totals_dict = {}    for initiative in initiative_totals:        t = (initiative['name'], initiative['goal'])        if t not in initiative_totals_dict:            initiative_totals_dict[t] = 0        initiative_totals_dict[t] += initiative['total_donated']    initiative_totals_grouped = []    for name, goal in initiative_totals_dict.keys():        d = {            "total_donated": initiative_totals_dict[(name, goal)],            "goal": goal,            "name": name,        }        initiative_totals_grouped.append(d)    output_dic['initiative_totals'] += initiative_totals_grouped    return jsonify(output_dic)