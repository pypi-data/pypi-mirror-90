def get_articles():    """    Gets all of the articles that were published by newspapers owned by the account    :param: JWT token for a owner    :return: json object: articles, boolean indicating whether the account belongs to newspark if owner found    in the database, Account Not Found otherwise    """    username = get_jwt_identity()    exists = Owner.query.filter_by(username=username).first()    if exists:        if username == 'admin':            admin_account = True        else:            admin_account = False        sql_query = '''select donations.donation_id, donations.amount_donated, articles.article_link,                       articles.article_title, articles.widget_status, publisher_id, date_published,                       articles.project_id1, articles.project_id2, articles.project_id3, articles.project_id4,                       articles.project_id5, articles.project_id6, edited_by_newspark, edited_by_publisher                        from articles                       left join donations on donations.newspaper_article_link=articles.article_link where                       articles.publisher_id in                                     (select publisher_id from Owning where owner_id='{}');'''.format(username)        conn = db.engine.connect().connection        df = pd.read_sql(sql_query, conn)        all_articles = []        unique_articles = list(df['article_link'].unique())        for i in unique_articles:            temp = df[df.article_link == i]            ids = [temp['project_id' + str(i)].iloc[0] for i in range(1, 7)]            # print(ids)            count = sum([0 if pd.isnull(idd) else 1 for idd in ids])            dic = {}            dic['publisher_name'] = temp['publisher_id'].iloc[0]            dic['num_projects'] = count            # dic['date_published'] = temp['date_published'].iloc[0].strftime('%m/%d/%Y')            dic['date_published'] = temp['date_published'].iloc[0]            dic['article_link'] = i            dic['article_title'] = temp['article_title'].iloc[0]            dic['edited_by_newspark'] = bool(temp['edited_by_newspark'].iloc[0])            dic['edited_by_publisher'] = bool(temp['edited_by_publisher'].iloc[0])            dic['widget_status'] = bool(temp['widget_status'].iloc[0])            dic['revenue'] = int(temp['amount_donated'].sum())            dic['amount_donations'] = len(temp)            all_articles.append(dic)        all_articles = sorted(all_articles, key=lambda x: x['date_published'], reverse=True)        # for article in all_articles:        #     print(type(article['date_published']))        return jsonify(articles=all_articles, admin_account=admin_account)    else:        return jsonify("Account Not Found")